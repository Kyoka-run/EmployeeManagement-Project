{"ast":null,"code":"import React, { Component } from 'react';\nimport EmployeeDataService from '../service/EmployeeDataService.jsx';\nimport withRouter from './withRouter';\nimport AuthenticationService from '../service/AuthenticationService.jsx';\nclass ListEmployeesComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      employees: [],\n      message: null\n    };\n    this.refreshEmployees = this.refreshEmployees.bind(this);\n    this.deleteEmployeeClicked = this.deleteEmployeeClicked.bind(this);\n    this.updateEmployeeClicked = this.updateEmployeeClicked.bind(this);\n    this.addEmployeeClicked = this.addEmployeeClicked.bind(this);\n  }\n  componentDidMount() {\n    this.refreshEmployees();\n  }\n  refreshEmployees() {\n    EmployeeDataService.retrieveAllEmployees().then(response => {\n      console.log(response);\n      this.setState({\n        employees: response.data\n      });\n    }).catch(error => {\n      return error;\n    });\n  }\n  deleteEmployeeClicked(id) {\n    EmployeeDataService.deleteEmployee(id).then(response => {\n      this.setState({\n        message: \"Employee deleted successfully!\"\n      });\n      this.refreshEmployees();\n    }).catch(error => {\n      return error;\n    });\n  }\n  updateEmployeeClicked(id) {\n    console.log('update ' + id);\n    this.props.navigation(`/employees/${id}`);\n  }\n  addEmployeeClicked() {\n    this.props.navigation('/employees/-1');\n  }\n  render() {\n    if (!AuthenticationService.isUserLoggedIn()) {\n      this.props.navigation('/login');\n    } else {}\n  }\n}\nexport default _c = withRouter(ListEmployeesComponent);\nvar _c;\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"names":["React","Component","EmployeeDataService","withRouter","AuthenticationService","ListEmployeesComponent","constructor","props","state","employees","message","refreshEmployees","bind","deleteEmployeeClicked","updateEmployeeClicked","addEmployeeClicked","componentDidMount","retrieveAllEmployees","then","response","console","log","setState","data","catch","error","id","deleteEmployee","navigation","render","isUserLoggedIn","_c","$RefreshReg$"],"sources":["C:/Users/86177/Desktop/web/employee-app/src/components/ListEmployeesComponent.jsx"],"sourcesContent":["import React, { Component } from 'react';\r\nimport EmployeeDataService from  '../service/EmployeeDataService.jsx';\r\nimport withRouter from './withRouter';\r\nimport AuthenticationService from '../service/AuthenticationService.jsx';\r\n\r\nclass ListEmployeesComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            employees: [],\r\n            message: null\r\n        }\r\n        this.refreshEmployees = this.refreshEmployees.bind(this);\r\n        this.deleteEmployeeClicked = this.deleteEmployeeClicked.bind(this);\r\n        this.updateEmployeeClicked = this.updateEmployeeClicked.bind(this);\r\n        this.addEmployeeClicked = this.addEmployeeClicked.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshEmployees();\r\n    }\r\n\r\n    refreshEmployees() {\r\n        EmployeeDataService.retrieveAllEmployees()\r\n           .then(response => {\r\n                console.log(response);\r\n                this.setState({employees: response.data});\r\n           }\r\n        ).catch(error => {\r\n            return error;\r\n        });\r\n    }\r\n\r\n    deleteEmployeeClicked(id) {\r\n        EmployeeDataService.deleteEmployee(id)\r\n            .then(\r\n                response => {\r\n                    this.setState({ message: \"Employee deleted successfully!\"})\r\n                    this.refreshEmployees()\r\n                }\r\n            ).catch(error => {\r\n                return error;\r\n            })\r\n    }\r\n\r\n    updateEmployeeClicked(id) {\r\n        console.log('update ' + id)\r\n        this.props.navigation(`/employees/${id}`)\r\n    }\r\n\r\n    addEmployeeClicked() {\r\n        this.props.navigation('/employees/-1')\r\n    }\r\n\r\n    render() {\r\n        if (!AuthenticationService.isUserLoggedIn()) {\r\n            this.props.navigation('/login')\r\n        } else {\r\n            \r\n        }\r\n        \r\n    }    \r\n}\r\n\r\nexport default withRouter(ListEmployeesComponent);"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,mBAAmB,MAAO,oCAAoC;AACrE,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,qBAAqB,MAAM,sCAAsC;AAExE,MAAMC,sBAAsB,SAASJ,SAAS,CAAC;EAC3CK,WAAWA,CAACC,KAAK,EAAE;IACf,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACC,KAAK,GAAG;MACTC,SAAS,EAAE,EAAE;MACbC,OAAO,EAAE;IACb,CAAC;IACD,IAAI,CAACC,gBAAgB,GAAG,IAAI,CAACA,gBAAgB,CAACC,IAAI,CAAC,IAAI,CAAC;IACxD,IAAI,CAACC,qBAAqB,GAAG,IAAI,CAACA,qBAAqB,CAACD,IAAI,CAAC,IAAI,CAAC;IAClE,IAAI,CAACE,qBAAqB,GAAG,IAAI,CAACA,qBAAqB,CAACF,IAAI,CAAC,IAAI,CAAC;IAClE,IAAI,CAACG,kBAAkB,GAAG,IAAI,CAACA,kBAAkB,CAACH,IAAI,CAAC,IAAI,CAAC;EAChE;EAEAI,iBAAiBA,CAAA,EAAG;IAChB,IAAI,CAACL,gBAAgB,CAAC,CAAC;EAC3B;EAEAA,gBAAgBA,CAAA,EAAG;IACfT,mBAAmB,CAACe,oBAAoB,CAAC,CAAC,CACtCC,IAAI,CAACC,QAAQ,IAAI;MACbC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;MACrB,IAAI,CAACG,QAAQ,CAAC;QAACb,SAAS,EAAEU,QAAQ,CAACI;MAAI,CAAC,CAAC;IAC9C,CACH,CAAC,CAACC,KAAK,CAACC,KAAK,IAAI;MACb,OAAOA,KAAK;IAChB,CAAC,CAAC;EACN;EAEAZ,qBAAqBA,CAACa,EAAE,EAAE;IACtBxB,mBAAmB,CAACyB,cAAc,CAACD,EAAE,CAAC,CACjCR,IAAI,CACDC,QAAQ,IAAI;MACR,IAAI,CAACG,QAAQ,CAAC;QAAEZ,OAAO,EAAE;MAAgC,CAAC,CAAC;MAC3D,IAAI,CAACC,gBAAgB,CAAC,CAAC;IAC3B,CACJ,CAAC,CAACa,KAAK,CAACC,KAAK,IAAI;MACb,OAAOA,KAAK;IAChB,CAAC,CAAC;EACV;EAEAX,qBAAqBA,CAACY,EAAE,EAAE;IACtBN,OAAO,CAACC,GAAG,CAAC,SAAS,GAAGK,EAAE,CAAC;IAC3B,IAAI,CAACnB,KAAK,CAACqB,UAAU,CAAC,cAAcF,EAAE,EAAE,CAAC;EAC7C;EAEAX,kBAAkBA,CAAA,EAAG;IACjB,IAAI,CAACR,KAAK,CAACqB,UAAU,CAAC,eAAe,CAAC;EAC1C;EAEAC,MAAMA,CAAA,EAAG;IACL,IAAI,CAACzB,qBAAqB,CAAC0B,cAAc,CAAC,CAAC,EAAE;MACzC,IAAI,CAACvB,KAAK,CAACqB,UAAU,CAAC,QAAQ,CAAC;IACnC,CAAC,MAAM,CAEP;EAEJ;AACJ;AAEA,eAAAG,EAAA,GAAe5B,UAAU,CAACE,sBAAsB,CAAC;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}